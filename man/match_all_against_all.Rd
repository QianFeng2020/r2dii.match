% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match_all_against_all.R
\name{match_all_against_all}
\alias{match_all_against_all}
\title{Score similarity between \code{alias} values in two dataframes}
\usage{
match_all_against_all(
  loanbook,
  ald,
  ...,
  by_sector = TRUE,
  method = "jw",
  p = 0.1
)
}
\arguments{
\item{loanbook, ald}{Dataframes with \code{alias} and optionally \code{sector}
columns.}

\item{...}{Additional arguments are passed on to \link[stringdist:stringsim]{stringdist::stringsim}.}

\item{by_sector}{Should the combinations be done by sector?}

\item{method}{Method for distance calculation. The default is \code{"osa"},
see \code{\link[stringdist]{stringdist-metrics}}.}

\item{p}{Penalty factor for Jaro-Winkler distance. The valid range for 
\code{p} is \code{0 <= p <= 0.25}. If \code{p=0} (default), the
Jaro-distance is returned. Applies only to \code{method='jw'}.}
}
\value{
A \link[dplyr:tibble]{dplyr::tibble}.
}
\description{
Apply \code{score_similarity()} to all combinations of \code{alias} values
from two dataframes.
}
\examples{
library(dplyr)

loanbook <- tibble(
  sector = c("A", "B", "B"),
  alias = c("xa", "xb", "xc")
)

ald <- tibble(
  sector = c("A", "B", "C"),
  alias = c("ya", "yb", "yc")
)

out <- match_all_against_all(loanbook, ald)

# Recover sector
left_join(out, loanbook, by = c("alias_lbk" = "alias"))

threshold <- 0.5
match_all_against_all(loanbook, ald) \%>\%
  filter(score >= threshold)

out <- match_all_against_all(loanbook, ald, by_sector = FALSE)
out

# Recover sectors from x & y
left_join(out, loanbook, by = c("alias_lbk" = "alias")) \%>\%
  rename(sector_x = sector) \%>\%
  left_join(ald, by = c("alias_ald" = "alias")) \%>\%
  rename(sector_y = sector)
}
\seealso{
Other internal-ish: 
\code{\link{bridge_sector}()},
\code{\link{restructure_ald_for_matching}()},
\code{\link{restructure_loanbook_for_matching}()},
\code{\link{score_similarity}()},
\code{\link{to_alias}()},
\code{\link{uniquify_id_column}()}
}
\concept{internal-ish}
